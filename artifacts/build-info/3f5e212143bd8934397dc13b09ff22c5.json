{
	"id": "3f5e212143bd8934397dc13b09ff22c5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"33_Fallback_and_recieve.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// https://github.com/ethereum/remix-project/issues/176\r\npragma solidity >=0.8.2 <0.9.0;\r\n\r\n/*\r\n function -- 1 fallback   2 recieve \r\n\r\n Fallback --- \r\n 1. it si executed when a non-existent function is called on the contract.\r\n 2. it is required to mark external.\r\n 3. it has no name.\r\n 4. it has no arguments.\r\n 5. it can't return anything.\r\n 6. it can be defined one per contract.\r\n 7. if not mark payabale, it will throw exception if citract recieve ethers.\r\n 8. it's main use it to directly send the ETH to contract.\r\n*/"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"sources": {
			"33_Fallback_and_recieve.sol": {
				"ast": {
					"absolutePath": "33_Fallback_and_recieve.sol",
					"exportedSymbols": {},
					"id": 2,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "90:31:0"
						}
					],
					"src": "90:468:0"
				},
				"id": 0
			}
		}
	}
}